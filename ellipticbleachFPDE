import numpy as np 
import scipy as sp
import matplotlib.pyplot as plt
from numpy import ndarray
# simpler calculation if n,m, and thus N are even
n = 6 
m = 6
N = int(n*m)
D = 1
E = 1
a = 1
b = 2
dp = .5 
dz = .5
dt = .01
rp1 = D*dt/(dp**2)
rp2 = 2*D*dt/(dp**2)
rp3 = D*dt/(dp)
rz1 = D*dt/(dz**2)
rz2 = 2*D*dt/(dz**2)
A = np.zeros((N,N))
#Setting up the sparse matrix B
x1 = np.concatenate((np.zeros(int(m/2)),np.concatenate((rp1*np.ones(N-m),np.zeros(int(m/2))), axis = None)), axis = None)
x2 = np.concatenate(([0],np.concatenate((rz1*np.ones(N-2),[0]),axis=None)),axis=None)
x4 = x2
B = np.zeros((2*m-1,N))
C = np.zeros((n-1,m)) 
for i in range(2,n+1):
    C[i-2] = (rp3/i+rp1)*np.ones(m)
B[0] = np.concatenate((np.zeros(int(m/2)),np.concatenate((C.flatten(),np.zeros(int(m/2))),axis=None)),axis=None)
B[m-2] = x4
H = np.zeros((n,m))
for i in range(1,n+1):
    H[i-1] = (1-rp3/i-rp2-rz2)*np.ones(m)
B[int((n+m-1)/2)] = H.flatten() 
B[m] = x2
B[-1] = x1

